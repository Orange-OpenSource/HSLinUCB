---
# Software Name : HSLinUCB
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: GPL-2.0
#
# This software is distributed under the GNU General Public License v2.0 license
#
# Author: David DELANDE <david.delande@orange.com> et al.

- name: install docker prerequis
  apt: package={{ item }} update_cache=yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
    - python3-pip
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"

- name: install python-pip
  apt:
    package: python-pip
  when: ansible_python_version is version('3','<')
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"

- name: Get docker gpg
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
    state: present
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"

- name: Add repository Docker
  apt_repository: 
    repo: deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable
    state: present
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"

- name: install docker 
  apt: package={{ item }} update_cache=yes
  with_items:
    - docker-ce
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"

- name: Update docker service
  template:
    src: "docker.service-18.09.0.j2"
    dest: "/lib/systemd/system/docker.service"
  notify: restart docker

- name: add remote user to group docker
  command: usermod -aG docker {{ansible_user}}

- name: Remove docker0 network interface for kubernetes cluster
  shell: ip link delete docker0
  failed_when: false
  when: (CLEAN_CLUSTER is defined and ((groups['master'] is defined and inventory_hostname in groups['master']) or (groups['worker'] is defined and inventory_hostname in groups['worker']))) 
  notify: restart docker
  tags: [ 'reset_cluster' ]

- meta: flush_handlers

- name: Start docker service
  service:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes
  
# This is needed based on Docker 1.13 update. Kubernetes and/or CNI could also fix this.  
- name: Re-enable ipchains FORWARD
  iptables:
    chain: FORWARD
    policy: ACCEPT

- name: install python docker
  pip:
    name: docker-py
  when: ansible_python_version is version('2.7','<')
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"

- name: install python docker
  pip:
    name: docker
  when: ansible_python_version is version('2.7','>=')
  environment:
    - http_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
    - https_proxy: "http://{{hostvars[groups['master'][0]].ansible_default_ipv4.address}}:3128"
